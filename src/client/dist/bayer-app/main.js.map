{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/farmer-search-card/farmer-search-card.component.html","webpack:///./src/app/farmer-search-card/farmer-search-card.component.scss","webpack:///./src/app/farmer-search-card/farmer-search-card.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/address.model.ts","webpack:///./src/model/document.model.ts","webpack:///./src/model/farmer.model.ts","webpack:///./src/services/farmer/farmer.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-progress-bar\\n  [style.opacity]=\\\"searching ? '1' : '0'\\\"\\n  mode=\\\"query\\\"\\n></mat-progress-bar>\\n\\n<div class=\\\"container\\\">\\n  <farmer-search-card\\n    (onSearchEvent)=\\\"searching = true\\\"\\n    [farmerSearchAbstractProvider]=\\\"myFarmerSearchProvider\\\"\\n    (onPartnerSelectedEvent)=\\\"onPartnerSelectedEvent($event)\\\"\\n  >\\n  </farmer-search-card>\\n  <mat-form-field\\n    appearance=\\\"fill\\\"\\n    class=\\\"full-width flex-2 autofill-form-field\\\"\\n  >\\n    <mat-label>Remetente</mat-label>\\n    <input matInput readonly [(ngModel)]=\\\"farmer.name\\\" />\\n  </mat-form-field>\\n</div>\\n<div class=\\\"container\\\">\\n  <mat-form-field\\n    appearance=\\\"fill\\\"\\n    class=\\\"full-width flex-1 autofill-form-field\\\"\\n  >\\n    <mat-label>Doc #</mat-label>\\n    <input matInput readonly [(ngModel)]=\\\"farmer.document.number\\\" />\\n  </mat-form-field>\\n  <mat-form-field\\n    appearance=\\\"fill\\\"\\n    class=\\\"full-width flex-3 autofill-form-field\\\"\\n  >\\n    <mat-label>Endere√ßo</mat-label>\\n    <input matInput readonly [(ngModel)]=\\\"farmer.address.address\\\" />\\n  </mat-form-field>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { Farmer } from \"src/model/farmer.model\";\nimport { FarmerSearchAbstractProvider } from \"src/services/farmer/farmer.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  constructor(\n    public myFarmerSearchProvider: FarmerSearchAbstractProvider,\n    private snackBar: MatSnackBar\n  ) {}\n\n  farmer: Farmer = new Farmer();\n\n  searching = false;\n\n  onPartnerSelectedEvent(response: Farmer | Error) {\n    this.searching = false;\n\n    if (response instanceof Error) {\n      this.snackBar.open(response.message, \"Ok\", {\n        panelClass: \"style-error\",\n        duration: 3000,\n        horizontalPosition: \"end\",\n        verticalPosition: \"top\",\n      });\n      this.farmer = new Farmer();\n      return;\n    }\n\n    this.snackBar.open(\"Found\", \"OK\", {\n      panelClass: \"style-success\",\n      duration: 5000,\n      horizontalPosition: \"end\",\n      verticalPosition: \"top\",\n    });\n    this.farmer = response;\n  }\n}\n","import { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport {\n  MatButtonModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatProgressBarModule,\n  MatSnackBarModule,\n} from \"@angular/material\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { FarmerSearchAbstractProvider } from \"src/services/farmer/farmer.service\";\nimport { AppComponent } from \"./app.component\";\nimport { FarmerSearchCardComponent } from \"./farmer-search-card/farmer-search-card.component\";\n\n@NgModule({\n  declarations: [AppComponent, FarmerSearchCardComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n  ],\n  providers: [FarmerSearchAbstractProvider],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","module.exports = \"<mat-form-field appearance=\\\"fill\\\" class=\\\"full-width flex-1\\\">\\n  <mat-label>Nome ou Doc#</mat-label>\\n  <input [(ngModel)]=\\\"termInput\\\" matInput />\\n  <mat-icon matPrefix>search</mat-icon>\\n  <button matSuffix mat-button (click)=\\\"onSearchClick()\\\">\\n    <mat-icon>arrow_forward</mat-icon>\\n  </button>\\n</mat-form-field>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zhcm1lci1zZWFyY2gtY2FyZC9mYXJtZXItc2VhcmNoLWNhcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Farmer } from \"src/model/farmer.model\";\nimport { FarmerSearchAbstractProvider } from \"src/services/farmer/farmer-searcher-abstract-provider\";\n\n@Component({\n  selector: \"farmer-search-card\",\n  templateUrl: \"./farmer-search-card.component.html\",\n  styleUrls: [\"./farmer-search-card.component.scss\"],\n})\nexport class FarmerSearchCardComponent implements OnInit {\n  @Input() farmerSearchAbstractProvider: FarmerSearchAbstractProvider;\n  @Output() onPartnerSelectedEvent = new EventEmitter();\n  @Output() onSearchEvent = new EventEmitter();\n\n  termInput = \"\";\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  onSearchClick() {\n    if (this.termInput) {\n      this.onSearchEvent.emit();\n\n      this.farmerSearchAbstractProvider\n        .searchFarmers({ term: this.termInput })\n        .then((res) => {\n          this.onPartnerSelectedEvent.emit(res[0] as Farmer);\n        })\n        .catch((err) => {\n          this.onPartnerSelectedEvent.emit(\n            new Error(\n              (err.error && err.error.message) ||\n                \"Action could not be completed\"\n            )\n          );\n        });\n    } else {\n      this.onPartnerSelectedEvent.emit(\n        new Error(\"Name or Doc number is required\")\n      );\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Address {\n  street: string;\n  state: string;\n  address: string;\n  country: string;\n}\n","export class Document {\n  documentNumber: string;\n  documentType: string;\n}\n","import { Address } from \"./address.model\";\nimport { Document } from \"./document.model\";\n\nexport class Farmer {\n  constructor() {\n    this.document = new Document();\n    this.address = new Address();\n  }\n\n  id: string;\n  document: Document;\n  name: string;\n  address: Address;\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Farmer } from \"src/model/farmer.model\";\nimport { SearchParams } from \"../search-params\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FarmerSearchAbstractProvider {\n  private farmersUrl = \"/api/farmers\";\n\n  constructor(private http: HttpClient) {}\n\n  searchFarmers(params: SearchParams): Promise<Farmer[]> {\n    return this.http\n      .get<Farmer[]>(`${this.farmersUrl}/${params.term}`)\n      .toPromise();\n  }\n}\n"],"sourceRoot":""}